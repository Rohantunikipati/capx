/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticationImport } from './routes/_authentication'
import { Route as IndexImport } from './routes/index'
import { Route as PortfolioIndexImport } from './routes/portfolio/index'
import { Route as PortfolioPortfolioIdImport } from './routes/portfolio/$portfolioId'
import { Route as AuthenticationProfileImport } from './routes/_authentication/profile'
import { Route as AuthenticationAboutImport } from './routes/_authentication/about'

// Create/Update Routes

const AuthenticationRoute = AuthenticationImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PortfolioIndexRoute = PortfolioIndexImport.update({
  id: '/portfolio/',
  path: '/portfolio/',
  getParentRoute: () => rootRoute,
} as any)

const PortfolioPortfolioIdRoute = PortfolioPortfolioIdImport.update({
  id: '/portfolio/$portfolioId',
  path: '/portfolio/$portfolioId',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationProfileRoute = AuthenticationProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticationRoute,
} as any)

const AuthenticationAboutRoute = AuthenticationAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AuthenticationRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/_authentication/about': {
      id: '/_authentication/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthenticationAboutImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/profile': {
      id: '/_authentication/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticationProfileImport
      parentRoute: typeof AuthenticationImport
    }
    '/portfolio/$portfolioId': {
      id: '/portfolio/$portfolioId'
      path: '/portfolio/$portfolioId'
      fullPath: '/portfolio/$portfolioId'
      preLoaderRoute: typeof PortfolioPortfolioIdImport
      parentRoute: typeof rootRoute
    }
    '/portfolio/': {
      id: '/portfolio/'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof PortfolioIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthenticationRouteChildren {
  AuthenticationAboutRoute: typeof AuthenticationAboutRoute
  AuthenticationProfileRoute: typeof AuthenticationProfileRoute
}

const AuthenticationRouteChildren: AuthenticationRouteChildren = {
  AuthenticationAboutRoute: AuthenticationAboutRoute,
  AuthenticationProfileRoute: AuthenticationProfileRoute,
}

const AuthenticationRouteWithChildren = AuthenticationRoute._addFileChildren(
  AuthenticationRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticationRouteWithChildren
  '/about': typeof AuthenticationAboutRoute
  '/profile': typeof AuthenticationProfileRoute
  '/portfolio/$portfolioId': typeof PortfolioPortfolioIdRoute
  '/portfolio': typeof PortfolioIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticationRouteWithChildren
  '/about': typeof AuthenticationAboutRoute
  '/profile': typeof AuthenticationProfileRoute
  '/portfolio/$portfolioId': typeof PortfolioPortfolioIdRoute
  '/portfolio': typeof PortfolioIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authentication': typeof AuthenticationRouteWithChildren
  '/_authentication/about': typeof AuthenticationAboutRoute
  '/_authentication/profile': typeof AuthenticationProfileRoute
  '/portfolio/$portfolioId': typeof PortfolioPortfolioIdRoute
  '/portfolio/': typeof PortfolioIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/profile'
    | '/portfolio/$portfolioId'
    | '/portfolio'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/profile'
    | '/portfolio/$portfolioId'
    | '/portfolio'
  id:
    | '__root__'
    | '/'
    | '/_authentication'
    | '/_authentication/about'
    | '/_authentication/profile'
    | '/portfolio/$portfolioId'
    | '/portfolio/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticationRoute: typeof AuthenticationRouteWithChildren
  PortfolioPortfolioIdRoute: typeof PortfolioPortfolioIdRoute
  PortfolioIndexRoute: typeof PortfolioIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticationRoute: AuthenticationRouteWithChildren,
  PortfolioPortfolioIdRoute: PortfolioPortfolioIdRoute,
  PortfolioIndexRoute: PortfolioIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authentication",
        "/portfolio/$portfolioId",
        "/portfolio/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authentication": {
      "filePath": "_authentication.tsx",
      "children": [
        "/_authentication/about",
        "/_authentication/profile"
      ]
    },
    "/_authentication/about": {
      "filePath": "_authentication/about.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/profile": {
      "filePath": "_authentication/profile.tsx",
      "parent": "/_authentication"
    },
    "/portfolio/$portfolioId": {
      "filePath": "portfolio/$portfolioId.tsx"
    },
    "/portfolio/": {
      "filePath": "portfolio/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
